// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	readme "github.com/liveoaklabs/readme-api-go-client/readme"
	mock "github.com/stretchr/testify/mock"
)

// MockClientInterface is an autogenerated mock type for the ClientInterface type
type MockClientInterface struct {
	mock.Mock
}

type MockClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClientInterface) EXPECT() *MockClientInterface_Expecter {
	return &MockClientInterface_Expecter{mock: &_m.Mock}
}

// NewAPIRegistryClient provides a mock function with given fields:
func (_m *MockClientInterface) NewAPIRegistryClient() readme.APIRegistryClient {
	ret := _m.Called()

	var r0 readme.APIRegistryClient
	if rf, ok := ret.Get(0).(func() readme.APIRegistryClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.APIRegistryClient)
	}

	return r0
}

// MockClientInterface_NewAPIRegistryClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewAPIRegistryClient'
type MockClientInterface_NewAPIRegistryClient_Call struct {
	*mock.Call
}

// NewAPIRegistryClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewAPIRegistryClient() *MockClientInterface_NewAPIRegistryClient_Call {
	return &MockClientInterface_NewAPIRegistryClient_Call{Call: _e.mock.On("NewAPIRegistryClient")}
}

func (_c *MockClientInterface_NewAPIRegistryClient_Call) Run(run func()) *MockClientInterface_NewAPIRegistryClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewAPIRegistryClient_Call) Return(_a0 readme.APIRegistryClient) *MockClientInterface_NewAPIRegistryClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewAPIRegistryClient_Call) RunAndReturn(run func() readme.APIRegistryClient) *MockClientInterface_NewAPIRegistryClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewAPISpecificationClient provides a mock function with given fields:
func (_m *MockClientInterface) NewAPISpecificationClient() readme.APISpecificationClient {
	ret := _m.Called()

	var r0 readme.APISpecificationClient
	if rf, ok := ret.Get(0).(func() readme.APISpecificationClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.APISpecificationClient)
	}

	return r0
}

// MockClientInterface_NewAPISpecificationClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewAPISpecificationClient'
type MockClientInterface_NewAPISpecificationClient_Call struct {
	*mock.Call
}

// NewAPISpecificationClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewAPISpecificationClient() *MockClientInterface_NewAPISpecificationClient_Call {
	return &MockClientInterface_NewAPISpecificationClient_Call{Call: _e.mock.On("NewAPISpecificationClient")}
}

func (_c *MockClientInterface_NewAPISpecificationClient_Call) Run(run func()) *MockClientInterface_NewAPISpecificationClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewAPISpecificationClient_Call) Return(_a0 readme.APISpecificationClient) *MockClientInterface_NewAPISpecificationClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewAPISpecificationClient_Call) RunAndReturn(run func() readme.APISpecificationClient) *MockClientInterface_NewAPISpecificationClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewApplyClient provides a mock function with given fields:
func (_m *MockClientInterface) NewApplyClient() readme.ApplyClient {
	ret := _m.Called()

	var r0 readme.ApplyClient
	if rf, ok := ret.Get(0).(func() readme.ApplyClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.ApplyClient)
	}

	return r0
}

// MockClientInterface_NewApplyClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewApplyClient'
type MockClientInterface_NewApplyClient_Call struct {
	*mock.Call
}

// NewApplyClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewApplyClient() *MockClientInterface_NewApplyClient_Call {
	return &MockClientInterface_NewApplyClient_Call{Call: _e.mock.On("NewApplyClient")}
}

func (_c *MockClientInterface_NewApplyClient_Call) Run(run func()) *MockClientInterface_NewApplyClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewApplyClient_Call) Return(_a0 readme.ApplyClient) *MockClientInterface_NewApplyClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewApplyClient_Call) RunAndReturn(run func() readme.ApplyClient) *MockClientInterface_NewApplyClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewCategoryClient provides a mock function with given fields:
func (_m *MockClientInterface) NewCategoryClient() readme.CategoryClient {
	ret := _m.Called()

	var r0 readme.CategoryClient
	if rf, ok := ret.Get(0).(func() readme.CategoryClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.CategoryClient)
	}

	return r0
}

// MockClientInterface_NewCategoryClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewCategoryClient'
type MockClientInterface_NewCategoryClient_Call struct {
	*mock.Call
}

// NewCategoryClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewCategoryClient() *MockClientInterface_NewCategoryClient_Call {
	return &MockClientInterface_NewCategoryClient_Call{Call: _e.mock.On("NewCategoryClient")}
}

func (_c *MockClientInterface_NewCategoryClient_Call) Run(run func()) *MockClientInterface_NewCategoryClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewCategoryClient_Call) Return(_a0 readme.CategoryClient) *MockClientInterface_NewCategoryClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewCategoryClient_Call) RunAndReturn(run func() readme.CategoryClient) *MockClientInterface_NewCategoryClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewChangelogClient provides a mock function with given fields:
func (_m *MockClientInterface) NewChangelogClient() readme.ChangelogClient {
	ret := _m.Called()

	var r0 readme.ChangelogClient
	if rf, ok := ret.Get(0).(func() readme.ChangelogClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.ChangelogClient)
	}

	return r0
}

// MockClientInterface_NewChangelogClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewChangelogClient'
type MockClientInterface_NewChangelogClient_Call struct {
	*mock.Call
}

// NewChangelogClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewChangelogClient() *MockClientInterface_NewChangelogClient_Call {
	return &MockClientInterface_NewChangelogClient_Call{Call: _e.mock.On("NewChangelogClient")}
}

func (_c *MockClientInterface_NewChangelogClient_Call) Run(run func()) *MockClientInterface_NewChangelogClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewChangelogClient_Call) Return(_a0 readme.ChangelogClient) *MockClientInterface_NewChangelogClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewChangelogClient_Call) RunAndReturn(run func() readme.ChangelogClient) *MockClientInterface_NewChangelogClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewCustomPageClient provides a mock function with given fields:
func (_m *MockClientInterface) NewCustomPageClient() readme.CustomPageClient {
	ret := _m.Called()

	var r0 readme.CustomPageClient
	if rf, ok := ret.Get(0).(func() readme.CustomPageClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.CustomPageClient)
	}

	return r0
}

// MockClientInterface_NewCustomPageClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewCustomPageClient'
type MockClientInterface_NewCustomPageClient_Call struct {
	*mock.Call
}

// NewCustomPageClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewCustomPageClient() *MockClientInterface_NewCustomPageClient_Call {
	return &MockClientInterface_NewCustomPageClient_Call{Call: _e.mock.On("NewCustomPageClient")}
}

func (_c *MockClientInterface_NewCustomPageClient_Call) Run(run func()) *MockClientInterface_NewCustomPageClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewCustomPageClient_Call) Return(_a0 readme.CustomPageClient) *MockClientInterface_NewCustomPageClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewCustomPageClient_Call) RunAndReturn(run func() readme.CustomPageClient) *MockClientInterface_NewCustomPageClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewDocClient provides a mock function with given fields:
func (_m *MockClientInterface) NewDocClient() readme.DocClient {
	ret := _m.Called()

	var r0 readme.DocClient
	if rf, ok := ret.Get(0).(func() readme.DocClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.DocClient)
	}

	return r0
}

// MockClientInterface_NewDocClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewDocClient'
type MockClientInterface_NewDocClient_Call struct {
	*mock.Call
}

// NewDocClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewDocClient() *MockClientInterface_NewDocClient_Call {
	return &MockClientInterface_NewDocClient_Call{Call: _e.mock.On("NewDocClient")}
}

func (_c *MockClientInterface_NewDocClient_Call) Run(run func()) *MockClientInterface_NewDocClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewDocClient_Call) Return(_a0 readme.DocClient) *MockClientInterface_NewDocClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewDocClient_Call) RunAndReturn(run func() readme.DocClient) *MockClientInterface_NewDocClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewImageClient provides a mock function with given fields:
func (_m *MockClientInterface) NewImageClient() readme.ImageClient {
	ret := _m.Called()

	var r0 readme.ImageClient
	if rf, ok := ret.Get(0).(func() readme.ImageClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.ImageClient)
	}

	return r0
}

// MockClientInterface_NewImageClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewImageClient'
type MockClientInterface_NewImageClient_Call struct {
	*mock.Call
}

// NewImageClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewImageClient() *MockClientInterface_NewImageClient_Call {
	return &MockClientInterface_NewImageClient_Call{Call: _e.mock.On("NewImageClient")}
}

func (_c *MockClientInterface_NewImageClient_Call) Run(run func()) *MockClientInterface_NewImageClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewImageClient_Call) Return(_a0 readme.ImageClient) *MockClientInterface_NewImageClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewImageClient_Call) RunAndReturn(run func() readme.ImageClient) *MockClientInterface_NewImageClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewNukeClient provides a mock function with given fields:
func (_m *MockClientInterface) NewNukeClient() readme.NukeClient {
	ret := _m.Called()

	var r0 readme.NukeClient
	if rf, ok := ret.Get(0).(func() readme.NukeClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.NukeClient)
	}

	return r0
}

// MockClientInterface_NewNukeClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewNukeClient'
type MockClientInterface_NewNukeClient_Call struct {
	*mock.Call
}

// NewNukeClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewNukeClient() *MockClientInterface_NewNukeClient_Call {
	return &MockClientInterface_NewNukeClient_Call{Call: _e.mock.On("NewNukeClient")}
}

func (_c *MockClientInterface_NewNukeClient_Call) Run(run func()) *MockClientInterface_NewNukeClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewNukeClient_Call) Return(_a0 readme.NukeClient) *MockClientInterface_NewNukeClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewNukeClient_Call) RunAndReturn(run func() readme.NukeClient) *MockClientInterface_NewNukeClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewProjectClient provides a mock function with given fields:
func (_m *MockClientInterface) NewProjectClient() readme.ProjectClient {
	ret := _m.Called()

	var r0 readme.ProjectClient
	if rf, ok := ret.Get(0).(func() readme.ProjectClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.ProjectClient)
	}

	return r0
}

// MockClientInterface_NewProjectClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewProjectClient'
type MockClientInterface_NewProjectClient_Call struct {
	*mock.Call
}

// NewProjectClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewProjectClient() *MockClientInterface_NewProjectClient_Call {
	return &MockClientInterface_NewProjectClient_Call{Call: _e.mock.On("NewProjectClient")}
}

func (_c *MockClientInterface_NewProjectClient_Call) Run(run func()) *MockClientInterface_NewProjectClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewProjectClient_Call) Return(_a0 readme.ProjectClient) *MockClientInterface_NewProjectClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewProjectClient_Call) RunAndReturn(run func() readme.ProjectClient) *MockClientInterface_NewProjectClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewVersionClient provides a mock function with given fields:
func (_m *MockClientInterface) NewVersionClient() readme.VersionClient {
	ret := _m.Called()

	var r0 readme.VersionClient
	if rf, ok := ret.Get(0).(func() readme.VersionClient); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(readme.VersionClient)
	}

	return r0
}

// MockClientInterface_NewVersionClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewVersionClient'
type MockClientInterface_NewVersionClient_Call struct {
	*mock.Call
}

// NewVersionClient is a helper method to define mock.On call
func (_e *MockClientInterface_Expecter) NewVersionClient() *MockClientInterface_NewVersionClient_Call {
	return &MockClientInterface_NewVersionClient_Call{Call: _e.mock.On("NewVersionClient")}
}

func (_c *MockClientInterface_NewVersionClient_Call) Run(run func()) *MockClientInterface_NewVersionClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClientInterface_NewVersionClient_Call) Return(_a0 readme.VersionClient) *MockClientInterface_NewVersionClient_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockClientInterface_NewVersionClient_Call) RunAndReturn(run func() readme.VersionClient) *MockClientInterface_NewVersionClient_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockClientInterface creates a new instance of MockClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockClientInterface {
	mock := &MockClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
