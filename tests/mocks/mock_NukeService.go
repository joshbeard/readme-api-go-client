// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockNukeService is an autogenerated mock type for the NukeService type
type MockNukeService struct {
	mock.Mock
}

type MockNukeService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockNukeService) EXPECT() *MockNukeService_Expecter {
	return &MockNukeService_Expecter{mock: &_m.Mock}
}

// DestroyAll provides a mock function with given fields:
func (_m *MockNukeService) DestroyAll() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyAll_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyAll'
type MockNukeService_DestroyAll_Call struct {
	*mock.Call
}

// DestroyAll is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyAll() *MockNukeService_DestroyAll_Call {
	return &MockNukeService_DestroyAll_Call{Call: _e.mock.On("DestroyAll")}
}

func (_c *MockNukeService_DestroyAll_Call) Run(run func()) *MockNukeService_DestroyAll_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyAll_Call) Return(_a0 []error) *MockNukeService_DestroyAll_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyAll_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyAll_Call {
	_c.Call.Return(run)
	return _c
}

// DestroyCategories provides a mock function with given fields:
func (_m *MockNukeService) DestroyCategories() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyCategories_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyCategories'
type MockNukeService_DestroyCategories_Call struct {
	*mock.Call
}

// DestroyCategories is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyCategories() *MockNukeService_DestroyCategories_Call {
	return &MockNukeService_DestroyCategories_Call{Call: _e.mock.On("DestroyCategories")}
}

func (_c *MockNukeService_DestroyCategories_Call) Run(run func()) *MockNukeService_DestroyCategories_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyCategories_Call) Return(_a0 []error) *MockNukeService_DestroyCategories_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyCategories_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyCategories_Call {
	_c.Call.Return(run)
	return _c
}

// DestroyChangelogs provides a mock function with given fields:
func (_m *MockNukeService) DestroyChangelogs() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyChangelogs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyChangelogs'
type MockNukeService_DestroyChangelogs_Call struct {
	*mock.Call
}

// DestroyChangelogs is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyChangelogs() *MockNukeService_DestroyChangelogs_Call {
	return &MockNukeService_DestroyChangelogs_Call{Call: _e.mock.On("DestroyChangelogs")}
}

func (_c *MockNukeService_DestroyChangelogs_Call) Run(run func()) *MockNukeService_DestroyChangelogs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyChangelogs_Call) Return(_a0 []error) *MockNukeService_DestroyChangelogs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyChangelogs_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyChangelogs_Call {
	_c.Call.Return(run)
	return _c
}

// DestroyCustomPages provides a mock function with given fields:
func (_m *MockNukeService) DestroyCustomPages() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyCustomPages_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyCustomPages'
type MockNukeService_DestroyCustomPages_Call struct {
	*mock.Call
}

// DestroyCustomPages is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyCustomPages() *MockNukeService_DestroyCustomPages_Call {
	return &MockNukeService_DestroyCustomPages_Call{Call: _e.mock.On("DestroyCustomPages")}
}

func (_c *MockNukeService_DestroyCustomPages_Call) Run(run func()) *MockNukeService_DestroyCustomPages_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyCustomPages_Call) Return(_a0 []error) *MockNukeService_DestroyCustomPages_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyCustomPages_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyCustomPages_Call {
	_c.Call.Return(run)
	return _c
}

// DestroyDocs provides a mock function with given fields:
func (_m *MockNukeService) DestroyDocs() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyDocs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyDocs'
type MockNukeService_DestroyDocs_Call struct {
	*mock.Call
}

// DestroyDocs is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyDocs() *MockNukeService_DestroyDocs_Call {
	return &MockNukeService_DestroyDocs_Call{Call: _e.mock.On("DestroyDocs")}
}

func (_c *MockNukeService_DestroyDocs_Call) Run(run func()) *MockNukeService_DestroyDocs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyDocs_Call) Return(_a0 []error) *MockNukeService_DestroyDocs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyDocs_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyDocs_Call {
	_c.Call.Return(run)
	return _c
}

// DestroySpecs provides a mock function with given fields:
func (_m *MockNukeService) DestroySpecs() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroySpecs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroySpecs'
type MockNukeService_DestroySpecs_Call struct {
	*mock.Call
}

// DestroySpecs is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroySpecs() *MockNukeService_DestroySpecs_Call {
	return &MockNukeService_DestroySpecs_Call{Call: _e.mock.On("DestroySpecs")}
}

func (_c *MockNukeService_DestroySpecs_Call) Run(run func()) *MockNukeService_DestroySpecs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroySpecs_Call) Return(_a0 []error) *MockNukeService_DestroySpecs_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroySpecs_Call) RunAndReturn(run func() []error) *MockNukeService_DestroySpecs_Call {
	_c.Call.Return(run)
	return _c
}

// DestroyVersions provides a mock function with given fields:
func (_m *MockNukeService) DestroyVersions() []error {
	ret := _m.Called()

	var r0 []error
	if rf, ok := ret.Get(0).(func() []error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}

// MockNukeService_DestroyVersions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DestroyVersions'
type MockNukeService_DestroyVersions_Call struct {
	*mock.Call
}

// DestroyVersions is a helper method to define mock.On call
func (_e *MockNukeService_Expecter) DestroyVersions() *MockNukeService_DestroyVersions_Call {
	return &MockNukeService_DestroyVersions_Call{Call: _e.mock.On("DestroyVersions")}
}

func (_c *MockNukeService_DestroyVersions_Call) Run(run func()) *MockNukeService_DestroyVersions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNukeService_DestroyVersions_Call) Return(_a0 []error) *MockNukeService_DestroyVersions_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNukeService_DestroyVersions_Call) RunAndReturn(run func() []error) *MockNukeService_DestroyVersions_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockNukeService creates a new instance of MockNukeService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNukeService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNukeService {
	mock := &MockNukeService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
